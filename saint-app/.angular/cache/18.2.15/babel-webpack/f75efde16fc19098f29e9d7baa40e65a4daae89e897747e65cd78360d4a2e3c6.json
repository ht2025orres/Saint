{"ast":null,"code":"import { User } from '../../models/User';\nimport Swal from 'sweetalert2';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 14);\n    i0.ɵɵtext(1, \" Ingresa un correo valido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_label_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 14);\n    i0.ɵɵtext(1, \" Ingresa una contrase\\u00F1a valida \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, router, fb) {\n      this.authService = authService;\n      this.router = router;\n      this.fb = fb;\n      this.errorMessage = '';\n      this.user = new User();\n      this.createForm();\n    }\n    ngOnInit() {\n      if (this.authService.isAuthenticated()) {\n        /* Cada vez que llega a la pagina de login valida si el pages esta autenticado */\n        Swal.fire({\n          title: 'Login',\n          html: `Hola ${this.authService.user.firstName}, ya estás autenticado en el sistema`,\n          icon: 'info',\n          timer: 2000,\n          timerProgressBar: true\n        });\n        this.router.navigate(['/dashboard']);\n      }\n    }\n    get emailNoValid() {\n      return this.formGr.get('email').invalid && this.formGr.get('email').touched;\n    }\n    get passwordNoValid() {\n      return this.formGr.get('password').invalid && this.formGr.get('password').touched;\n    }\n    createForm() {\n      this.formGr = this.fb.group({\n        email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n        password: ['', Validators.required]\n      });\n    }\n    login() {\n      if (this.formGr.valid) {\n        this.user.email = this.formGr.get('email').value;\n        this.user.password = this.formGr.get('password').value;\n        this.authService.login(this.user).subscribe(response => {\n          this.authService.saveUser(response.access_token);\n          this.authService.saveToken(response.access_token);\n          const user = this.authService.user;\n          Swal.fire({\n            title: 'Inicio de sesión',\n            html: `Hola <strong>${user.firstName}</strong> , iniciaste sesión correctamente`,\n            icon: 'success',\n            timer: 2000,\n            timerProgressBar: true\n          });\n          this.router.navigate(['/dashboard']);\n        }, err => {\n          if (err.status === 400) {\n            Swal.fire({\n              title: 'Error de autenticación',\n              html: 'Usuario o contraseña incorrecta',\n              icon: 'warning',\n              timer: 2000,\n              timerProgressBar: true\n            });\n            this.formGr.get('email').setValue('');\n            this.formGr.get('password').setValue('');\n          }\n        });\n      }\n    }\n    validateCursor() {\n      if (this.formGr.invalid) {\n        return 'unset';\n      } else {\n        return 'pointer';\n      }\n    }\n    static #_ = (() => this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 19,\n      vars: 14,\n      consts: [[\"id\", \"wrapper\"], [1, \"login-register\", 2, \"background-image\", \"url(../../../assets/images/loginBackground.jpg)\"], [1, \"card\", \"login-box\"], [1, \"card-body\"], [1, \"form-control-line\", 3, \"ngSubmit\", \"formGroup\"], [\"src\", \"../../../assets/images/logo.png\", 1, \"img-responsive\"], [1, \"form-group\"], [1, \"col-xs-12\"], [\"class\", \"form-control-label\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Correo\", 1, \"form-control\", \"form-control-danger\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"minlength\", \"4\", 1, \"form-control\", \"form-control-danger\"], [1, \"form-group\", \"text-center\"], [1, \"col-xs-12\", \"pt-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"btn-lg\", \"btn-themecolor\", \"btn-rounded\", 2, \"opacity\", \".65\", \"width\", \"100%\", 3, \"disabled\"], [1, \"form-control-label\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(5, \"div\");\n          i0.ɵɵelement(6, \"img\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7);\n          i0.ɵɵtemplate(9, LoginComponent_label_9_Template, 2, 0, \"label\", 8);\n          i0.ɵɵelement(10, \"input\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 6)(12, \"div\", 7);\n          i0.ɵɵtemplate(13, LoginComponent_label_13_Template, 2, 0, \"label\", 8);\n          i0.ɵɵelement(14, \"input\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 11)(16, \"div\", 12)(17, \"button\", 13);\n          i0.ɵɵtext(18, \"Acceder \");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.formGr);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"has-danger\", ctx.emailNoValid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailNoValid);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"form-control-danger\", ctx.emailNoValid);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"has-danger\", ctx.passwordNoValid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.passwordNoValid);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"form-control-danger\", ctx.passwordNoValid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleProp(\"cursor\", ctx.validateCursor());\n          i0.ɵɵproperty(\"disabled\", ctx.formGr.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinLengthValidator, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".login-register[_ngcontent-%COMP%]{background-size:cover;background-repeat:no-repeat;background-position:center center;height:100%;width:100%;padding:5% 0;position:fixed}.login-box[_ngcontent-%COMP%]{width:400px;padding:15px;border-radius:10px;margin:0 auto}.login-box[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{width:100%;left:0;right:0}.login-box[_ngcontent-%COMP%]   .social[_ngcontent-%COMP%]{display:block;margin-bottom:30px}#recoverform[_ngcontent-%COMP%]{display:none}.login-sidebar[_ngcontent-%COMP%]{padding:0;margin-top:0}.login-sidebar[_ngcontent-%COMP%]   .login-box[_ngcontent-%COMP%]{right:0;position:absolute;height:100%}\"]\n    }))();\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}