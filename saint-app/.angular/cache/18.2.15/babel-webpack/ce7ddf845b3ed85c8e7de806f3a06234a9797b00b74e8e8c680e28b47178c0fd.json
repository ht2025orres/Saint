{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.urlEndPoint = `${environment.URL_LOGIN}/v1/users`;\n    }\n    searchUser(word) {\n      return this.http.get(`${this.urlEndPoint}/search/${word}`);\n    }\n    listUserSheetBySize(size) {\n      return this.http.get(`${this.urlEndPoint}/size/` + size).pipe(tap(response => response.content.forEach(ficha => console.log(ficha))));\n    }\n    getAllPaginator(page) {\n      return this.http.get(`${this.urlEndPoint}/page/` + page).pipe(tap(response => response.content.forEach(user => console.log(user))));\n    }\n    getAll() {\n      return this.http.get(`${this.urlEndPoint}`);\n    }\n    disableUser(user) {\n      return this.http.put('', user);\n    }\n    getById(id) {\n      return this.http.get(`${this.urlEndPoint}/${id}`);\n    }\n    saveUser(userCurrent) {\n      if (userCurrent.id != null) {\n        return this.http.put(`${this.urlEndPoint}`, userCurrent);\n      }\n      return this.http.post(`${this.urlEndPoint}`, userCurrent);\n    }\n    static #_ = (() => this.ɵfac = function UserService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UserService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}