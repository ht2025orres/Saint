{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Inject, Component, Input, EventEmitter, forwardRef, HostBinding, Output, ViewChild, HostListener, SecurityContext, Attribute, ContentChild, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport * as i6 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/platform-browser';\nconst _c0 = [\"*\"];\nfunction AeButtonComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\");\n    i0.ɵɵelement(2, \"use\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"href\", \"assets/ae-icons/icons.svg#\" + ctx_r0.iconName)(\"href\", \"assets/ae-icons/icons.svg#\" + ctx_r0.iconName, null, \"xlink\");\n  }\n}\nfunction AeButtonComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"labelButton\"];\nconst _c2 = a0 => ({\n  \"ae-expanded\": a0\n});\nconst _c3 = (a0, a1) => ({\n  \"selected\": a0,\n  \"focused\": a1\n});\nfunction AeSelectComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AeSelectComponent_button_7_Template_button_click_0_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.optionSelect(item_r3, $event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c3, item_r3.value === ctx_r3.value, i_r5 === ctx_r3.optionId));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r3.label, \" \");\n  }\n}\nfunction AeSelectComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \"No items for select\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [\"fileInput\"];\nfunction AeToolbarComponent_div_0_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"ae-select\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AeToolbarComponent_div_0_div_35_Template_ae_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.customClassId, $event) || (ctx_r1.customClassId = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_div_35_Template_ae_select_change_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.setCustomClass(ctx_r1.customClassId));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"options\", ctx_r1.customClassList);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.customClassId);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"customClasses\"));\n  }\n}\nfunction AeToolbarComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"undo\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"redo\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"bold\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"italic\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"underline\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"strikeThrough\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"subscript\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"superscript\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 5)(12, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"justifyLeft\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"justifyCenter\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"justifyRight\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"justifyFull\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 5)(17, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"indent\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"outdent\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 5)(20, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"insertUnorderedList\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"insertOrderedList\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 5)(23, \"ae-select\", 22);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AeToolbarComponent_div_0_Template_ae_select_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.block, $event) || (ctx_r1.block = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_Template_ae_select_change_23_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(ctx_r1.block));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 5)(25, \"ae-select\", 23);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AeToolbarComponent_div_0_Template_ae_select_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.fontName, $event) || (ctx_r1.fontName = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_Template_ae_select_change_25_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setFontName(ctx_r1.fontName));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 5)(27, \"ae-select\", 24);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AeToolbarComponent_div_0_Template_ae_select_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.fontSize, $event) || (ctx_r1.fontSize = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_Template_ae_select_change_27_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setFontSize(ctx_r1.fontSize));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 5)(29, \"input\", 25, 0);\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_Template_input_change_29_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const fgInput_r3 = i0.ɵɵreference(30);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.insertColor(fgInput_r3.value, \"textColor\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const fgInput_r3 = i0.ɵɵreference(30);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.focus();\n      return i0.ɵɵresetView(fgInput_r3.click());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"input\", 25, 1);\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_Template_input_change_32_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const bgInput_r4 = i0.ɵɵreference(33);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.insertColor(bgInput_r4.value, \"backgroundColor\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const bgInput_r4 = i0.ɵɵreference(33);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.focus();\n      return i0.ɵɵresetView(bgInput_r4.click());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(35, AeToolbarComponent_div_0_div_35_Template, 2, 4, \"div\", 28);\n    i0.ɵɵelementStart(36, \"div\", 5)(37, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.insertUrl());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"unlink\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"input\", 31, 2);\n    i0.ɵɵlistener(\"change\", function AeToolbarComponent_div_0_Template_input_change_39_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileChanged($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_41_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const fileInput_r6 = i0.ɵɵreference(40);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.focus();\n      return i0.ɵɵresetView(fileInput_r6.click());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_42_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.insertVideo());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_43_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"insertHorizontalRule\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(44, \"div\", 5)(45, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_45_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"removeFormat\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(46, \"div\", 5)(47, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function AeToolbarComponent_div_0_Template_button_click_47_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCommand(\"toggleEditorMode\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵprojection(48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r1.isButtonHidden(\"undo\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"hidden\", ctx_r1.isButtonHidden(\"redo\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"bold-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"bold\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"italic-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"italic\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"underline-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"underline\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"strikeThrough-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"strikeThrough\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"subscript-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"subscript\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"superscript-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"superscript\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"justifyLeft-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"justifyLeft\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"justifyCenter-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"justifyCenter\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"justifyRight-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"justifyRight\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"justifyFull-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"justifyFull\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"indent-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"indent\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"outdent-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"outdent\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"insertUnorderedList-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"insertUnorderedList\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"insertOrderedList-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"insertOrderedList\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.headings);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.block);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"heading\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.fonts);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.fontName);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"fontName\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.fontSizes);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.fontSize);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"fontSize\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"id\", \"foregroundColorPicker-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"textColor\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", \"backgroundColorPicker-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"backgroundColor\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._customClasses);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"link-\" + ctx_r1.id)(\"disabled\", ctx_r1.isLinkButtonDisabled)(\"hidden\", ctx_r1.isButtonHidden(\"link\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"unlink-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode || !ctx_r1.linkSelected)(\"hidden\", ctx_r1.isButtonHidden(\"unlink\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", \"insertImage-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"insertImage\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"insertVideo-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"insertVideo\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"insertHorizontalRule-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"insertHorizontalRule\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"clearFormatting-\" + ctx_r1.id)(\"disabled\", ctx_r1.htmlMode)(\"hidden\", ctx_r1.isButtonHidden(\"removeFormat\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"toggleEditorMode-\" + ctx_r1.id)(\"hidden\", ctx_r1.isButtonHidden(\"toggleEditorMode\"));\n  }\n}\nconst _c5 = [\"customButtons\"];\nconst _c6 = [\"editor\"];\nconst _c7 = [\"editorWrapper\"];\nconst _c8 = [\"editorToolbar\"];\nconst _c9 = a0 => ({\n  \"bottom\": a0\n});\nconst _c10 = a0 => ({\n  executeCommandFn: a0\n});\nlet AngularEditorService = /*#__PURE__*/(() => {\n  class AngularEditorService {\n    constructor(http, doc) {\n      this.http = http;\n      this.doc = doc;\n      /**\r\n       * save selection when the editor is focussed out\r\n       */\n      this.saveSelection = () => {\n        if (this.doc.getSelection) {\n          const sel = this.doc.getSelection();\n          if (sel.getRangeAt && sel.rangeCount) {\n            this.savedSelection = sel.getRangeAt(0);\n            this.selectedText = sel.toString();\n          }\n        } else if (this.doc.getSelection && this.doc.createRange) {\n          this.savedSelection = document.createRange();\n        } else {\n          this.savedSelection = null;\n        }\n      };\n    }\n    /**\r\n     * Executed command from editor header buttons exclude toggleEditorMode\r\n     * @param command string from triggerCommand\r\n     * @param value\r\n     */\n    executeCommand(command, value) {\n      const commands = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'pre'];\n      if (commands.includes(command)) {\n        this.doc.execCommand('formatBlock', false, command);\n        return;\n      }\n      this.doc.execCommand(command, false, value);\n    }\n    /**\r\n     * Create URL link\r\n     * @param url string from UI prompt\r\n     */\n    createLink(url) {\n      if (!url.includes('http')) {\n        this.doc.execCommand('createlink', false, url);\n      } else {\n        const newUrl = '<a href=\"' + url + '\" target=\"_blank\">' + this.selectedText + '</a>';\n        this.insertHtml(newUrl);\n      }\n    }\n    /**\r\n     * insert color either font or background\r\n     *\r\n     * @param color color to be inserted\r\n     * @param where where the color has to be inserted either text/background\r\n     */\n    insertColor(color, where) {\n      const restored = this.restoreSelection();\n      if (restored) {\n        if (where === 'textColor') {\n          this.doc.execCommand('foreColor', false, color);\n        } else {\n          this.doc.execCommand('hiliteColor', false, color);\n        }\n      }\n    }\n    /**\r\n     * Set font name\r\n     * @param fontName string\r\n     */\n    setFontName(fontName) {\n      this.doc.execCommand('fontName', false, fontName);\n    }\n    /**\r\n     * Set font size\r\n     * @param fontSize string\r\n     */\n    setFontSize(fontSize) {\n      this.doc.execCommand('fontSize', false, fontSize);\n    }\n    /**\r\n     * Create raw HTML\r\n     * @param html HTML string\r\n     */\n    insertHtml(html) {\n      const isHTMLInserted = this.doc.execCommand('insertHTML', false, html);\n      if (!isHTMLInserted) {\n        throw new Error('Unable to perform the operation');\n      }\n    }\n    /**\r\n     * restore selection when the editor is focused in\r\n     *\r\n     * saved selection when the editor is focused out\r\n     */\n    restoreSelection() {\n      if (this.savedSelection) {\n        if (this.doc.getSelection) {\n          const sel = this.doc.getSelection();\n          sel.removeAllRanges();\n          sel.addRange(this.savedSelection);\n          return true;\n        } else if (this.doc.getSelection /*&& this.savedSelection.select*/) {\n          // this.savedSelection.select();\n          return true;\n        }\n      } else {\n        return false;\n      }\n    }\n    /**\r\n     * setTimeout used for execute 'saveSelection' method in next event loop iteration\r\n     */\n    executeInNextQueueIteration(callbackFn, timeout = 1e2) {\n      setTimeout(callbackFn, timeout);\n    }\n    /** check any selection is made or not */\n    checkSelection() {\n      const selectedText = this.savedSelection.toString();\n      if (selectedText.length === 0) {\n        throw new Error('No Selection Made');\n      }\n      return true;\n    }\n    /**\r\n     * Upload file to uploadUrl\r\n     * @param file The file\r\n     */\n    uploadImage(file) {\n      const uploadData = new FormData();\n      uploadData.append('file', file, file.name);\n      return this.http.post(this.uploadUrl, uploadData, {\n        reportProgress: true,\n        observe: 'events',\n        withCredentials: this.uploadWithCredentials\n      });\n    }\n    /**\r\n     * Insert image with Url\r\n     * @param imageUrl The imageUrl.\r\n     */\n    insertImage(imageUrl) {\n      this.doc.execCommand('insertImage', false, imageUrl);\n    }\n    setDefaultParagraphSeparator(separator) {\n      this.doc.execCommand('defaultParagraphSeparator', false, separator);\n    }\n    createCustomClass(customClass) {\n      let newTag = this.selectedText;\n      if (customClass) {\n        const tagName = customClass.tag ? customClass.tag : 'span';\n        newTag = '<' + tagName + ' class=\"' + customClass.class + '\">' + this.selectedText + '</' + tagName + '>';\n      }\n      this.insertHtml(newTag);\n    }\n    insertVideo(videoUrl) {\n      if (videoUrl.match('www.youtube.com')) {\n        this.insertYouTubeVideoTag(videoUrl);\n      }\n      if (videoUrl.match('vimeo.com')) {\n        this.insertVimeoVideoTag(videoUrl);\n      }\n    }\n    insertYouTubeVideoTag(videoUrl) {\n      const id = videoUrl.split('v=')[1];\n      const imageUrl = `https://img.youtube.com/vi/${id}/0.jpg`;\n      const thumbnail = `\n      <div style='position: relative'>\n        <a href='${videoUrl}' target='_blank'>\n          <img src=\"${imageUrl}\" alt=\"click to watch\"/>\n          <img style='position: absolute; left:200px; top:140px'\n          src=\"https://img.icons8.com/color/96/000000/youtube-play.png\"/>\n        </a>\n      </div>`;\n      this.insertHtml(thumbnail);\n    }\n    insertVimeoVideoTag(videoUrl) {\n      const sub = this.http.get(`https://vimeo.com/api/oembed.json?url=${videoUrl}`).subscribe(data => {\n        const imageUrl = data.thumbnail_url_with_play_button;\n        const thumbnail = `<div>\n        <a href='${videoUrl}' target='_blank'>\n          <img src=\"${imageUrl}\" alt=\"${data.title}\"/>\n        </a>\n      </div>`;\n        this.insertHtml(thumbnail);\n        sub.unsubscribe();\n      });\n    }\n    nextNode(node) {\n      if (node.hasChildNodes()) {\n        return node.firstChild;\n      } else {\n        while (node && !node.nextSibling) {\n          node = node.parentNode;\n        }\n        if (!node) {\n          return null;\n        }\n        return node.nextSibling;\n      }\n    }\n    getRangeSelectedNodes(range, includePartiallySelectedContainers) {\n      let node = range.startContainer;\n      const endNode = range.endContainer;\n      let rangeNodes = [];\n      // Special case for a range that is contained within a single node\n      if (node === endNode) {\n        rangeNodes = [node];\n      } else {\n        // Iterate nodes until we hit the end container\n        while (node && node !== endNode) {\n          rangeNodes.push(node = this.nextNode(node));\n        }\n        // Add partially selected nodes at the start of the range\n        node = range.startContainer;\n        while (node && node !== range.commonAncestorContainer) {\n          rangeNodes.unshift(node);\n          node = node.parentNode;\n        }\n      }\n      // Add ancestors of the range container, if required\n      if (includePartiallySelectedContainers) {\n        node = range.commonAncestorContainer;\n        while (node) {\n          rangeNodes.push(node);\n          node = node.parentNode;\n        }\n      }\n      return rangeNodes;\n    }\n    getSelectedNodes() {\n      const nodes = [];\n      if (this.doc.getSelection) {\n        const sel = this.doc.getSelection();\n        for (let i = 0, len = sel.rangeCount; i < len; ++i) {\n          nodes.push.apply(nodes, this.getRangeSelectedNodes(sel.getRangeAt(i), true));\n        }\n      }\n      return nodes;\n    }\n    replaceWithOwnChildren(el) {\n      const parent = el.parentNode;\n      while (el.hasChildNodes()) {\n        parent.insertBefore(el.firstChild, el);\n      }\n      parent.removeChild(el);\n    }\n    removeSelectedElements(tagNames) {\n      const tagNamesArray = tagNames.toLowerCase().split(',');\n      this.getSelectedNodes().forEach(node => {\n        if (node.nodeType === 1 && tagNamesArray.indexOf(node.tagName.toLowerCase()) > -1) {\n          // Remove the node and replace it with its children\n          this.replaceWithOwnChildren(node);\n        }\n      });\n    }\n  }\n  AngularEditorService.ɵfac = function AngularEditorService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularEditorService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(DOCUMENT));\n  };\n  AngularEditorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularEditorService,\n    factory: AngularEditorService.ɵfac\n  });\n  return AngularEditorService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst angularEditorConfig = {\n  editable: true,\n  spellcheck: true,\n  height: 'auto',\n  minHeight: '0',\n  maxHeight: 'auto',\n  width: 'auto',\n  minWidth: '0',\n  translate: 'yes',\n  enableToolbar: true,\n  showToolbar: true,\n  placeholder: 'Enter text here...',\n  defaultParagraphSeparator: '',\n  defaultFontName: '',\n  defaultFontSize: '',\n  fonts: [{\n    class: 'arial',\n    name: 'Arial'\n  }, {\n    class: 'times-new-roman',\n    name: 'Times New Roman'\n  }, {\n    class: 'calibri',\n    name: 'Calibri'\n  }, {\n    class: 'comic-sans-ms',\n    name: 'Comic Sans MS'\n  }],\n  uploadUrl: 'v1/image',\n  uploadWithCredentials: false,\n  sanitize: true,\n  toolbarPosition: 'top',\n  outline: true\n  /*toolbarHiddenButtons: [\r\n    ['bold', 'italic', 'underline', 'strikeThrough', 'superscript', 'subscript'],\r\n    ['heading', 'fontName', 'fontSize', 'color'],\r\n    ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent'],\r\n    ['cut', 'copy', 'delete', 'removeFormat', 'undo', 'redo'],\r\n    ['paragraph', 'blockquote', 'removeBlockquote', 'horizontalLine', 'orderedList', 'unorderedList'],\r\n    ['link', 'unlink', 'image', 'video']\r\n  ]*/\n};\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\nlet AeToolbarSetComponent = /*#__PURE__*/(() => {\n  class AeToolbarSetComponent {\n    constructor() {}\n  }\n  AeToolbarSetComponent.ɵfac = function AeToolbarSetComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AeToolbarSetComponent)();\n  };\n  AeToolbarSetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AeToolbarSetComponent,\n    selectors: [[\"ae-toolbar-set\"], [\"\", \"aeToolbarSet\", \"\"]],\n    hostAttrs: [1, \"angular-editor-toolbar-set\"],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function AeToolbarSetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"a[_ngcontent-%COMP%]{cursor:pointer}.angular-editor-toolbar-set[_nghost-%COMP%]{display:flex;gap:1px;width:fit-content;vertical-align:baseline}\"]\n  });\n  return AeToolbarSetComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AeButtonComponent = /*#__PURE__*/(() => {\n  class AeButtonComponent {\n    constructor() {\n      this.iconName = '';\n    }\n  }\n  AeButtonComponent.ɵfac = function AeButtonComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AeButtonComponent)();\n  };\n  AeButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AeButtonComponent,\n    selectors: [[\"ae-button\"], [\"button\", \"aeButton\", \"\"]],\n    hostAttrs: [1, \"angular-editor-button\"],\n    hostVars: 2,\n    hostBindings: function AeButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabIndex\", -1)(\"type\", \"button\");\n      }\n    },\n    inputs: {\n      iconName: \"iconName\"\n    },\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 2,\n    consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\", \"ngIfElse\"]],\n    template: function AeButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, AeButtonComponent_ng_container_0_Template, 3, 2, \"ng-container\", 1)(1, AeButtonComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const contentTemplate_r2 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.iconName)(\"ngIfElse\", contentTemplate_r2);\n      }\n    },\n    dependencies: [i1$1.NgIf],\n    styles: [\"a[_ngcontent-%COMP%]{cursor:pointer}.angular-editor-button[_nghost-%COMP%]{background-color:var(--ae-button-bg-color, white);vertical-align:middle;border:var(--ae-button-border, 1px solid #ddd);border-radius:var(--ae-button-radius, 4px);padding:.4rem;float:left;width:2rem;height:2rem}.angular-editor-button[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{width:100%;height:100%}.angular-editor-button[_nghost-%COMP%]:hover{cursor:pointer;background-color:var(--ae-button-hover-bg-color, #f1f1f1);transition:.2s ease}.angular-editor-button[_nghost-%COMP%]:focus, .angular-editor-button.focus[_nghost-%COMP%]{outline:0}.angular-editor-button[_nghost-%COMP%]:disabled{background-color:var(--ae-button-disabled-bg-color, #f5f5f5);pointer-events:none;cursor:not-allowed}.angular-editor-button[_nghost-%COMP%]:disabled > .color-label[_ngcontent-%COMP%]{pointer-events:none;cursor:not-allowed}.angular-editor-button[_nghost-%COMP%]:disabled > .color-label.foreground[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:after{background:#555555}.angular-editor-button[_nghost-%COMP%]:disabled > .color-label.background[_ngcontent-%COMP%]{background:#555555}.angular-editor-button.active[_nghost-%COMP%]{background:var(--ae-button-active-bg-color, #fffbd3)}.angular-editor-button.active[_nghost-%COMP%]:hover{background-color:var(--ae-button-active-hover-bg-color, #fffaad)}\"]\n  });\n  return AeButtonComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AeSelectComponent = /*#__PURE__*/(() => {\n  class AeSelectComponent {\n    constructor(elRef, r) {\n      this.elRef = elRef;\n      this.r = r;\n      this.options = [];\n      this.disabled = false;\n      this.optionId = 0;\n      this.opened = false;\n      this.hidden = 'inline-block';\n      // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename\n      this.changeEvent = new EventEmitter();\n      this.onChange = () => {};\n      this.onTouched = () => {};\n    }\n    get label() {\n      return this.selectedOption && this.selectedOption.hasOwnProperty('label') ? this.selectedOption.label : 'Select';\n    }\n    get value() {\n      return this.selectedOption.value;\n    }\n    ngOnInit() {\n      this.selectedOption = this.options[0];\n      if (isDefined(this.isHidden) && this.isHidden) {\n        this.hide();\n      }\n    }\n    hide() {\n      this.hidden = 'none';\n    }\n    optionSelect(option, event) {\n      event.stopPropagation();\n      this.setValue(option.value);\n      this.onChange(this.selectedOption.value);\n      this.changeEvent.emit(this.selectedOption.value);\n      this.onTouched();\n      this.opened = false;\n    }\n    toggleOpen(event) {\n      // event.stopPropagation();\n      if (this.disabled) {\n        return;\n      }\n      this.opened = !this.opened;\n    }\n    onClick($event) {\n      if (!this.elRef.nativeElement.contains($event.target)) {\n        this.close();\n      }\n    }\n    close() {\n      this.opened = false;\n    }\n    get isOpen() {\n      return this.opened;\n    }\n    writeValue(value) {\n      if (!value || typeof value !== 'string') {\n        return;\n      }\n      this.setValue(value);\n    }\n    setValue(value) {\n      let index = 0;\n      const selectedEl = this.options.find((el, i) => {\n        index = i;\n        return el.value === value;\n      });\n      if (selectedEl) {\n        this.selectedOption = selectedEl;\n        this.optionId = index;\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.labelButton.nativeElement.disabled = isDisabled;\n      const div = this.labelButton.nativeElement;\n      const action = isDisabled ? 'addClass' : 'removeClass';\n      this.r[action](div, 'disabled');\n      this.disabled = isDisabled;\n    }\n    handleKeyDown($event) {\n      if (!this.opened) {\n        return;\n      }\n      // console.log($event.key);\n      // if (KeyCode[$event.key]) {\n      switch ($event.key) {\n        case 'ArrowDown':\n          this._handleArrowDown($event);\n          break;\n        case 'ArrowUp':\n          this._handleArrowUp($event);\n          break;\n        case 'Space':\n          this._handleSpace($event);\n          break;\n        case 'Enter':\n          this._handleEnter($event);\n          break;\n        case 'Tab':\n          this._handleTab($event);\n          break;\n        case 'Escape':\n          this.close();\n          $event.preventDefault();\n          break;\n        case 'Backspace':\n          this._handleBackspace();\n          break;\n      }\n      // } else if ($event.key && $event.key.length === 1) {\n      // this._keyPress$.next($event.key.toLocaleLowerCase());\n      // }\n    }\n    _handleArrowDown($event) {\n      if (this.optionId < this.options.length - 1) {\n        this.optionId++;\n      }\n    }\n    _handleArrowUp($event) {\n      if (this.optionId >= 1) {\n        this.optionId--;\n      }\n    }\n    _handleSpace($event) {}\n    _handleEnter($event) {\n      this.optionSelect(this.options[this.optionId], $event);\n    }\n    _handleTab($event) {}\n    _handleBackspace() {}\n  }\n  AeSelectComponent.ɵfac = function AeSelectComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AeSelectComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  AeSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AeSelectComponent,\n    selectors: [[\"ae-select\"]],\n    viewQuery: function AeSelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.labelButton = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function AeSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function AeSelectComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        }, false, i0.ɵɵresolveDocument)(\"keydown\", function AeSelectComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"display\", ctx.hidden);\n      }\n    },\n    inputs: {\n      options: \"options\",\n      isHidden: [0, \"hidden\", \"isHidden\"]\n    },\n    outputs: {\n      changeEvent: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AeSelectComponent),\n      multi: true\n    }])],\n    decls: 9,\n    vars: 9,\n    consts: [[\"labelButton\", \"\"], [1, \"ae-picker\", 3, \"ngClass\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"role\", \"button\", 1, \"ae-picker-label\", 3, \"click\", \"tabIndex\"], [1, \"ae-picker-options\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"role\", \"button\", \"class\", \"ae-picker-item\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"dropdown-item\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"role\", \"button\", 1, \"ae-picker-item\", 3, \"click\", \"ngClass\"], [1, \"dropdown-item\"]],\n    template: function AeSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"span\", 1)(1, \"button\", 2, 0);\n        i0.ɵɵlistener(\"click\", function AeSelectComponent_Template_button_click_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.toggleOpen($event));\n        });\n        i0.ɵɵtext(3);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(4, \"svg\");\n        i0.ɵɵelement(5, \"use\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(6, \"span\", 3);\n        i0.ɵɵtemplate(7, AeSelectComponent_button_7_Template, 2, 5, \"button\", 4)(8, AeSelectComponent_span_8_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, ctx.isOpen));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"tabIndex\", -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"href\", \"assets/ae-icons/icons.svg#sort\")(\"href\", \"assets/ae-icons/icons.svg#sort\", null, \"xlink\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.options.length);\n      }\n    },\n    dependencies: [i1$1.NgClass, i1$1.NgForOf, i1$1.NgIf],\n    styles: [\"a[_ngcontent-%COMP%]{cursor:pointer}svg[_ngcontent-%COMP%]{width:100%;height:100%}.ae-picker[_ngcontent-%COMP%]{color:var(--ae-picker-color, #444);display:inline-block;float:left;width:100%;position:relative;vertical-align:middle}.ae-picker-label[_ngcontent-%COMP%]{cursor:pointer;display:inline-block;padding-left:8px;padding-right:10px;position:relative;width:100%;line-height:1.8rem;vertical-align:middle;font-size:85%;text-align:left;background-color:var(--ae-picker-label-color, white);min-width:2rem;float:left;border:1px solid #ddd;border-radius:var(--ae-button-radius, 4px);text-overflow:clip;overflow:hidden;white-space:nowrap;height:2rem}.ae-picker-label[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;right:0;top:0;width:20px;height:100%;background:linear-gradient(to right,var(--ae-picker-label-color, white),var(--ae-picker-label-color, white) 100%)}.ae-picker-label[_ngcontent-%COMP%]:focus{outline:none}.ae-picker-label[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f1f1f1;transition:.2s ease}.ae-picker-label[_ngcontent-%COMP%]:hover:before{background:linear-gradient(to right,#f5f5f5 100%,#ffffff 100%)}.ae-picker-label[_ngcontent-%COMP%]:disabled{background-color:#f5f5f5;pointer-events:none;cursor:not-allowed}.ae-picker-label[_ngcontent-%COMP%]:disabled:before{background:linear-gradient(to right,#f5f5f5 100%,#ffffff 100%)}.ae-picker-label[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{position:absolute;right:0;width:1rem}.ae-picker-label[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]:not(:root){overflow:hidden}.ae-picker-label[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   .ae-stroke[_ngcontent-%COMP%]{fill:none;stroke:#444;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}.ae-picker-options[_ngcontent-%COMP%]{background-color:var(--ae-picker-option-bg-color, #fff);display:none;min-width:100%;position:absolute;white-space:nowrap;z-index:3;border:1px solid transparent;box-shadow:#0003 0 2px 8px}.ae-picker-options[_ngcontent-%COMP%]   .ae-picker-item[_ngcontent-%COMP%]{cursor:pointer;display:block;padding-bottom:5px;padding-top:5px;padding-left:5px;z-index:3;text-align:left;background-color:transparent;min-width:2rem;width:100%;border:0 solid #ddd}.ae-picker-options[_ngcontent-%COMP%]   .ae-picker-item.selected[_ngcontent-%COMP%]{color:#06c;background-color:var(--ae-picker-option-active-bg-color, #fff4c2)}.ae-picker-options[_ngcontent-%COMP%]   .ae-picker-item.focused[_ngcontent-%COMP%]{background-color:var(--ae-picker-option-focused-bg-color, #fbf9b0)}.ae-picker-options[_ngcontent-%COMP%]   .ae-picker-item[_ngcontent-%COMP%]:hover{background-color:var(--ae-picker-option-hover-bg-color, #fffa98)}.ae-expanded[_ngcontent-%COMP%]{display:block;margin-top:-1px;z-index:1}.ae-expanded[_ngcontent-%COMP%]   .ae-picker-label[_ngcontent-%COMP%]{color:#ccc;z-index:2}.ae-expanded[_ngcontent-%COMP%]   .ae-picker-label[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{color:#ccc;z-index:2}.ae-expanded[_ngcontent-%COMP%]   .ae-picker-label[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   .ae-stroke[_ngcontent-%COMP%]{stroke:#ccc}.ae-expanded[_ngcontent-%COMP%]   .ae-picker-options[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:-1px;top:100%;z-index:3;border-color:#ccc}\"]\n  });\n  return AeSelectComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AeToolbarComponent = /*#__PURE__*/(() => {\n  class AeToolbarComponent {\n    constructor(r, editorService, er, doc) {\n      this.r = r;\n      this.editorService = editorService;\n      this.er = er;\n      this.doc = doc;\n      this.htmlMode = false;\n      this.linkSelected = false;\n      this.block = 'default';\n      this.fontName = 'Times New Roman';\n      this.fontSize = '3';\n      this.headings = [{\n        label: 'Heading 1',\n        value: 'h1'\n      }, {\n        label: 'Heading 2',\n        value: 'h2'\n      }, {\n        label: 'Heading 3',\n        value: 'h3'\n      }, {\n        label: 'Heading 4',\n        value: 'h4'\n      }, {\n        label: 'Heading 5',\n        value: 'h5'\n      }, {\n        label: 'Heading 6',\n        value: 'h6'\n      }, {\n        label: 'Heading 7',\n        value: 'h7'\n      }, {\n        label: 'Paragraph',\n        value: 'p'\n      }, {\n        label: 'Predefined',\n        value: 'pre'\n      }, {\n        label: 'Standard',\n        value: 'div'\n      }, {\n        label: 'default',\n        value: 'default'\n      }];\n      this.fontSizes = [{\n        label: '1',\n        value: '1'\n      }, {\n        label: '2',\n        value: '2'\n      }, {\n        label: '3',\n        value: '3'\n      }, {\n        label: '4',\n        value: '4'\n      }, {\n        label: '5',\n        value: '5'\n      }, {\n        label: '6',\n        value: '6'\n      }, {\n        label: '7',\n        value: '7'\n      }];\n      this.customClassId = '-1';\n      this.customClassList = [{\n        label: '',\n        value: ''\n      }];\n      // uploadUrl: string;\n      this.tagMap = {\n        BLOCKQUOTE: 'indent',\n        A: 'link'\n      };\n      this.select = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'P', 'PRE', 'DIV'];\n      this.buttons = ['bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent', 'insertUnorderedList', 'insertOrderedList', 'link'];\n      this.fonts = [{\n        label: '',\n        value: ''\n      }];\n      this.execute = new EventEmitter();\n    }\n    set customClasses(classes) {\n      if (classes) {\n        this._customClasses = classes;\n        this.customClassList = this._customClasses.map((x, i) => ({\n          label: x.name,\n          value: i.toString()\n        }));\n        this.customClassList.unshift({\n          label: 'Clear Class',\n          value: '-1'\n        });\n      }\n    }\n    set defaultFontName(value) {\n      if (value) {\n        this.fontName = value;\n      }\n    }\n    set defaultFontSize(value) {\n      if (value) {\n        this.fontSize = value;\n      }\n    }\n    get isLinkButtonDisabled() {\n      return this.htmlMode || !Boolean(this.editorService.selectedText);\n    }\n    /**\r\n     * Trigger command from editor header buttons\r\n     * @param command string from toolbar buttons\r\n     */\n    triggerCommand(command) {\n      this.execute.emit(command);\n    }\n    /**\r\n     * highlight editor buttons when cursor moved or positioning\r\n     */\n    triggerButtons() {\n      if (!this.showToolbar) {\n        return;\n      }\n      this.buttons.forEach(e => {\n        const result = this.doc.queryCommandState(e);\n        const elementById = this.doc.getElementById(e + '-' + this.id);\n        if (result) {\n          this.r.addClass(elementById, 'active');\n        } else {\n          this.r.removeClass(elementById, 'active');\n        }\n      });\n    }\n    /**\r\n     * trigger highlight editor buttons when cursor moved or positioning in block\r\n     */\n    triggerBlocks(nodes) {\n      if (!this.showToolbar) {\n        return;\n      }\n      this.linkSelected = nodes.findIndex(x => x.nodeName === 'A') > -1;\n      let found = false;\n      this.select.forEach(y => {\n        const node = nodes.find(x => x.nodeName === y);\n        if (node !== undefined && y === node.nodeName) {\n          if (found === false) {\n            this.block = node.nodeName.toLowerCase();\n            found = true;\n          }\n        } else if (found === false) {\n          this.block = 'default';\n        }\n      });\n      found = false;\n      if (this._customClasses) {\n        this._customClasses.forEach((y, index) => {\n          const node = nodes.find(x => {\n            if (x instanceof Element) {\n              return x.className === y.class;\n            }\n          });\n          if (node !== undefined) {\n            if (found === false) {\n              this.customClassId = index.toString();\n              found = true;\n            }\n          } else if (found === false) {\n            this.customClassId = '-1';\n          }\n        });\n      }\n      Object.keys(this.tagMap).map(e => {\n        const elementById = this.doc.getElementById(this.tagMap[e] + '-' + this.id);\n        const node = nodes.find(x => x.nodeName === e);\n        if (node !== undefined && e === node.nodeName) {\n          this.r.addClass(elementById, 'active');\n        } else {\n          this.r.removeClass(elementById, 'active');\n        }\n      });\n      this.foreColour = this.doc.queryCommandValue('ForeColor');\n      this.fontSize = this.doc.queryCommandValue('FontSize');\n      this.fontName = this.doc.queryCommandValue('FontName').replace(/\"/g, '');\n      this.backColor = this.doc.queryCommandValue('backColor');\n    }\n    /**\r\n     * insert URL link\r\n     */\n    insertUrl() {\n      let url = 'https:\\/\\/';\n      const selection = this.editorService.savedSelection;\n      if (selection && selection.commonAncestorContainer.parentElement.nodeName === 'A') {\n        const parent = selection.commonAncestorContainer.parentElement;\n        if (parent.href !== '') {\n          url = parent.href;\n        }\n      }\n      url = prompt('Insert URL link', url);\n      if (url && url !== '' && url !== 'https://') {\n        this.editorService.createLink(url);\n      }\n    }\n    /**\r\n     * insert Video link\r\n     */\n    insertVideo() {\n      this.execute.emit('');\n      const url = prompt('Insert Video link', `https://`);\n      if (url && url !== '' && url !== `https://`) {\n        this.editorService.insertVideo(url);\n      }\n    }\n    /** insert color */\n    insertColor(color, where) {\n      this.editorService.insertColor(color, where);\n      this.execute.emit('');\n    }\n    /**\r\n     * set font Name/family\r\n     * @param foreColor string\r\n     */\n    setFontName(foreColor) {\n      this.editorService.setFontName(foreColor);\n      this.execute.emit('');\n    }\n    /**\r\n     * set font Size\r\n     * @param fontSize string\r\n     */\n    setFontSize(fontSize) {\n      this.editorService.setFontSize(fontSize);\n      this.execute.emit('');\n    }\n    /**\r\n     * toggle editor mode (WYSIWYG or SOURCE)\r\n     * @param m boolean\r\n     */\n    setEditorMode(m) {\n      const toggleEditorModeButton = this.doc.getElementById('toggleEditorMode' + '-' + this.id);\n      if (m) {\n        this.r.addClass(toggleEditorModeButton, 'active');\n      } else {\n        this.r.removeClass(toggleEditorModeButton, 'active');\n      }\n      this.htmlMode = m;\n    }\n    /**\r\n     * Upload image when file is selected.\r\n     */\n    onFileChanged(event) {\n      const file = event.target.files[0];\n      if (file.type.includes('image/')) {\n        if (this.upload) {\n          this.upload(file).subscribe(response => this.watchUploadImage(response, event));\n        } else if (this.uploadUrl) {\n          this.editorService.uploadImage(file).subscribe(response => this.watchUploadImage(response, event));\n        } else {\n          const reader = new FileReader();\n          reader.onload = e => {\n            const fr = e.currentTarget;\n            this.editorService.insertImage(fr.result.toString());\n          };\n          reader.readAsDataURL(file);\n        }\n      }\n    }\n    watchUploadImage(response, event) {\n      const {\n        imageUrl\n      } = response.body;\n      this.editorService.insertImage(imageUrl);\n      event.srcElement.value = null;\n    }\n    /**\r\n     * Set custom class\r\n     */\n    setCustomClass(classId) {\n      if (classId === '-1') {\n        this.execute.emit('clear');\n      } else {\n        this.editorService.createCustomClass(this._customClasses[+classId]);\n      }\n    }\n    isButtonHidden(name) {\n      if (!name) {\n        return false;\n      }\n      if (!(this.hiddenButtons instanceof Array)) {\n        return false;\n      }\n      let result;\n      for (const arr of this.hiddenButtons) {\n        if (arr instanceof Array) {\n          result = arr.find(item => item === name);\n        }\n        if (result) {\n          break;\n        }\n      }\n      return result !== undefined;\n    }\n    focus() {\n      this.execute.emit('focus');\n      console.log('focused');\n    }\n  }\n  AeToolbarComponent.ɵfac = function AeToolbarComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AeToolbarComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(AngularEditorService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  AeToolbarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AeToolbarComponent,\n    selectors: [[\"angular-editor-toolbar\"], [\"ae-toolbar\"], [\"div\", \"aeToolbar\", \"\"]],\n    viewQuery: function AeToolbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c4, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInputFile = _t.first);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      uploadUrl: \"uploadUrl\",\n      upload: \"upload\",\n      showToolbar: \"showToolbar\",\n      fonts: \"fonts\",\n      customClasses: \"customClasses\",\n      defaultFontName: \"defaultFontName\",\n      defaultFontSize: \"defaultFontSize\",\n      hiddenButtons: \"hiddenButtons\"\n    },\n    outputs: {\n      execute: \"execute\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[\"fgInput\", \"\"], [\"bgInput\", \"\"], [\"fileInput\", \"\"], [\"class\", \"angular-editor-toolbar\", 4, \"ngIf\"], [1, \"angular-editor-toolbar\"], [\"aeToolbarSet\", \"\"], [\"aeButton\", \"\", \"title\", \"Undo\", \"iconName\", \"undo\", 3, \"click\", \"hidden\"], [\"aeButton\", \"\", \"title\", \"Redo\", \"iconName\", \"redo\", 3, \"click\", \"hidden\"], [\"aeButton\", \"\", \"title\", \"Bold\", \"iconName\", \"bold\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"italic\", \"title\", \"Italic\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"title\", \"Underline\", \"iconName\", \"underline\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"strikeThrough\", \"title\", \"Strikethrough\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"title\", \"Subscript\", \"iconName\", \"subscript\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"superscript\", \"title\", \"Superscript\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"justifyLeft\", \"title\", \"Justify Left\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"justifyCenter\", \"title\", \"Justify Center\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"justifyRight\", \"title\", \"Justify Right\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"justifyFull\", \"title\", \"Justify Full\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"indent\", \"title\", \"Indent\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"outdent\", \"title\", \"Outdent\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"unorderedList\", \"title\", \"Unordered List\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"orderedList\", \"title\", \"Ordered List\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"tabindex\", \"-1\", 1, \"select-heading\", 3, \"ngModelChange\", \"change\", \"options\", \"ngModel\", \"disabled\", \"hidden\"], [\"tabindex\", \"-1\", 1, \"select-font\", 3, \"ngModelChange\", \"change\", \"options\", \"ngModel\", \"disabled\", \"hidden\"], [\"tabindex\", \"-1\", 1, \"select-font-size\", 3, \"ngModelChange\", \"change\", \"options\", \"ngModel\", \"disabled\", \"hidden\"], [\"type\", \"color\", 2, \"display\", \"none\", 3, \"change\"], [\"aeButton\", \"\", \"iconName\", \"textColor\", \"title\", \"Text Color\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"backgroundColor\", \"title\", \"Background Color\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeToolbarSet\", \"\", 4, \"ngIf\"], [\"aeButton\", \"\", \"iconName\", \"link\", \"title\", \"Insert Link\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"unlink\", \"title\", \"Unlink\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"accept\", \"image/*\", \"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"aeButton\", \"\", \"iconName\", \"image\", \"title\", \"Insert Image\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"video\", \"title\", \"Insert Video\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"horizontalLine\", \"title\", \"Horizontal Line\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"removeFormat\", \"title\", \"Clear Formatting\", 1, \"angular-editor-button\", 3, \"click\", \"id\", \"disabled\", \"hidden\"], [\"aeButton\", \"\", \"iconName\", \"htmlCode\", \"title\", \"HTML Code\", 3, \"click\", \"id\", \"hidden\"], [\"tabindex\", \"-1\", 1, \"select-custom-style\", 3, \"ngModelChange\", \"change\", \"options\", \"ngModel\", \"disabled\", \"hidden\"]],\n    template: function AeToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, AeToolbarComponent_div_0_Template, 49, 83, \"div\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showToolbar);\n      }\n    },\n    dependencies: [AeToolbarSetComponent, AeButtonComponent, AeSelectComponent, i1$1.NgIf, i6.NgControlStatus, i6.NgModel],\n    styles: [\"a[_ngcontent-%COMP%]{cursor:pointer}.angular-editor-toolbar[_ngcontent-%COMP%]{font:100 14px/15px Roboto,Arial,sans-serif;background-color:var(--ae-toolbar-bg-color, #f5f5f5);font-size:.8rem;padding:var(--ae-toolbar-padding, .2rem);border:var(--ae-toolbar-border-radius, 1px solid #ddd);display:flex;flex-wrap:wrap;gap:4px}.select-heading[_ngcontent-%COMP%]{display:inline-block;width:90px}@supports not (-moz-appearance: none){.select-heading[_ngcontent-%COMP%]   optgroup[_ngcontent-%COMP%]{font-size:12px;background-color:#f4f4f4;padding:5px}.select-heading[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{border:1px solid;background-color:#fff}.select-heading[_ngcontent-%COMP%]   .default[_ngcontent-%COMP%]{font-size:16px}.select-heading[_ngcontent-%COMP%]   .h1[_ngcontent-%COMP%]{font-size:24px}.select-heading[_ngcontent-%COMP%]   .h2[_ngcontent-%COMP%]{font-size:20px}.select-heading[_ngcontent-%COMP%]   .h3[_ngcontent-%COMP%]{font-size:16px}.select-heading[_ngcontent-%COMP%]   .h4[_ngcontent-%COMP%]{font-size:15px}.select-heading[_ngcontent-%COMP%]   .h5[_ngcontent-%COMP%]{font-size:14px}.select-heading[_ngcontent-%COMP%]   .h6[_ngcontent-%COMP%]{font-size:13px}.select-heading[_ngcontent-%COMP%]   .div[_ngcontent-%COMP%], .select-heading[_ngcontent-%COMP%]   .pre[_ngcontent-%COMP%]{font-size:12px}}.select-heading[_ngcontent-%COMP%]:disabled{background-color:#f5f5f5;pointer-events:none;cursor:not-allowed}.select-heading[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f1f1f1;transition:.2s ease}.select-font[_ngcontent-%COMP%]{display:inline-block;width:90px}@supports not (-moz-appearance: none){.select-font[_ngcontent-%COMP%]   optgroup[_ngcontent-%COMP%]{font-size:12px;background-color:#f4f4f4;padding:5px}.select-font[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{border:1px solid;background-color:#fff}}.select-font[_ngcontent-%COMP%]:disabled{background-color:#f5f5f5;pointer-events:none;cursor:not-allowed}.select-font[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f1f1f1;transition:.2s ease}.select-font-size[_ngcontent-%COMP%]{display:inline-block;width:50px}@supports not (-moz-appearance: none){.select-font-size[_ngcontent-%COMP%]   optgroup[_ngcontent-%COMP%]{font-size:12px;background-color:#f4f4f4;padding:5px}.select-font-size[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{border:1px solid;background-color:#fff}.select-font-size[_ngcontent-%COMP%]   .size1[_ngcontent-%COMP%]{font-size:10px}.select-font-size[_ngcontent-%COMP%]   .size2[_ngcontent-%COMP%]{font-size:12px}.select-font-size[_ngcontent-%COMP%]   .size3[_ngcontent-%COMP%]{font-size:14px}.select-font-size[_ngcontent-%COMP%]   .size4[_ngcontent-%COMP%]{font-size:16px}.select-font-size[_ngcontent-%COMP%]   .size5[_ngcontent-%COMP%]{font-size:18px}.select-font-size[_ngcontent-%COMP%]   .size6[_ngcontent-%COMP%]{font-size:20px}.select-font-size[_ngcontent-%COMP%]   .size7[_ngcontent-%COMP%]{font-size:22px}}.select-font-size[_ngcontent-%COMP%]:disabled{background-color:#f5f5f5;pointer-events:none;cursor:not-allowed}.select-font-size[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f1f1f1;transition:.2s ease}.select-custom-style[_ngcontent-%COMP%]{display:inline-block;width:90px}@supports not (-moz-appearance: none){.select-custom-style[_ngcontent-%COMP%]   optgroup[_ngcontent-%COMP%]{font-size:12px;background-color:#f4f4f4;padding:5px}.select-custom-style[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{border:1px solid;background-color:#fff}}.select-custom-style[_ngcontent-%COMP%]:disabled{background-color:#f5f5f5;pointer-events:none;cursor:not-allowed}.select-custom-style[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f1f1f1;transition:.2s ease}.color-label[_ngcontent-%COMP%]{position:relative;cursor:pointer}.background[_ngcontent-%COMP%]{font-size:smaller;background:#1b1b1b;color:#fff;padding:3px}.foreground[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:after{position:absolute;content:\\\"\\\";inset:auto auto -3px -1px;width:15px;height:2px;z-index:0;background:#1b1b1b}\"]\n  });\n  return AeToolbarComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AngularEditorComponent = /*#__PURE__*/(() => {\n  class AngularEditorComponent {\n    constructor(r, editorService, doc, sanitizer, cdRef, defaultTabIndex, autoFocus) {\n      this.r = r;\n      this.editorService = editorService;\n      this.doc = doc;\n      this.sanitizer = sanitizer;\n      this.cdRef = cdRef;\n      this.autoFocus = autoFocus;\n      this.modeVisual = true;\n      this.showPlaceholder = false;\n      this.disabled = false;\n      this.focused = false;\n      this.touched = false;\n      this.changed = false;\n      this.id = '';\n      this.config = angularEditorConfig;\n      this.placeholder = '';\n      this.executeCommandFn = this.executeCommand.bind(this);\n      this.viewMode = new EventEmitter();\n      /** emits `blur` event when focused out from the textarea */\n      // eslint-disable-next-line @angular-eslint/no-output-native, @angular-eslint/no-output-rename\n      this.blurEvent = new EventEmitter();\n      /** emits `focus` event when focused in to the textarea */\n      // eslint-disable-next-line @angular-eslint/no-output-rename, @angular-eslint/no-output-native\n      this.focusEvent = new EventEmitter();\n      this.tabindex = -1;\n      const parsedTabIndex = Number(defaultTabIndex);\n      this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    onFocus() {\n      this.focus();\n    }\n    ngOnInit() {\n      this.config.toolbarPosition = this.config.toolbarPosition ? this.config.toolbarPosition : angularEditorConfig.toolbarPosition;\n    }\n    ngAfterViewInit() {\n      if (isDefined(this.autoFocus)) {\n        this.focus();\n      }\n    }\n    onPaste(event) {\n      if (this.config.rawPaste) {\n        event.preventDefault();\n        const text = event.clipboardData.getData('text/plain');\n        document.execCommand('insertHTML', false, text);\n        return text;\n      }\n    }\n    /**\r\n     * Executed command from editor header buttons\r\n     * @param command string from triggerCommand\r\n     * @param value\r\n     */\n    executeCommand(command, value) {\n      this.focus();\n      if (command === 'focus') {\n        return;\n      }\n      if (command === 'toggleEditorMode') {\n        this.toggleEditorMode(this.modeVisual);\n      } else if (command !== '') {\n        if (command === 'clear') {\n          this.editorService.removeSelectedElements(this.getCustomTags());\n          this.onContentChange(this.textArea.nativeElement);\n        } else if (command === 'default') {\n          this.editorService.removeSelectedElements('h1,h2,h3,h4,h5,h6,p,pre');\n          this.onContentChange(this.textArea.nativeElement);\n        } else {\n          this.editorService.executeCommand(command, value);\n        }\n        this.exec();\n      }\n    }\n    /**\r\n     * focus event\r\n     */\n    onTextAreaFocus(event) {\n      if (this.focused) {\n        event.stopPropagation();\n        return;\n      }\n      this.focused = true;\n      this.focusEvent.emit(event);\n      if (!this.touched || !this.changed) {\n        this.editorService.executeInNextQueueIteration(() => {\n          this.configure();\n          this.touched = true;\n        });\n      }\n    }\n    /**\r\n     * @description fires when cursor leaves textarea\r\n     */\n    onTextAreaMouseOut(event) {\n      this.editorService.saveSelection();\n    }\n    /**\r\n     * blur event\r\n     */\n    onTextAreaBlur(event) {\n      /**\r\n       * save selection if focussed out\r\n       */\n      this.editorService.executeInNextQueueIteration(this.editorService.saveSelection);\n      if (typeof this.onTouched === 'function') {\n        this.onTouched();\n      }\n      if (event.relatedTarget !== null) {\n        const parent = event.relatedTarget.parentElement;\n        if (!parent.classList.contains('angular-editor-toolbar-set') && !parent.classList.contains('ae-picker')) {\n          this.blurEvent.emit(event);\n          this.focused = false;\n        }\n      }\n    }\n    /**\r\n     *  focus the text area when the editor is focused\r\n     */\n    focus() {\n      if (this.modeVisual) {\n        this.textArea.nativeElement.focus();\n      } else {\n        const sourceText = this.doc.getElementById('sourceText' + this.id);\n        sourceText.focus();\n        this.focused = true;\n      }\n    }\n    /**\r\n     * Executed from the contenteditable section while the input property changes\r\n     * @param element html element from contenteditable\r\n     */\n    onContentChange(element) {\n      let html = '';\n      if (this.modeVisual) {\n        html = element.innerHTML;\n      } else {\n        html = element.innerText;\n      }\n      if (!html || html === '<br>') {\n        html = '';\n      }\n      if (typeof this.onChange === 'function') {\n        this.onChange(this.config.sanitize || this.config.sanitize === undefined ? this.sanitizer.sanitize(SecurityContext.HTML, html) : html);\n        if (!html !== this.showPlaceholder) {\n          this.togglePlaceholder(this.showPlaceholder);\n        }\n      }\n      this.changed = true;\n    }\n    /**\r\n     * Set the function to be called\r\n     * when the control receives a change event.\r\n     *\r\n     * @param fn a function\r\n     */\n    registerOnChange(fn) {\n      this.onChange = e => e === '<br>' ? fn('') : fn(e);\n    }\n    /**\r\n     * Set the function to be called\r\n     * when the control receives a touch event.\r\n     *\r\n     * @param fn a function\r\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\r\n     * Write a new value to the element.\r\n     *\r\n     * @param value value to be executed when there is a change in contenteditable\r\n     */\n    writeValue(value) {\n      if ((!value || value === '<br>' || value === '') !== this.showPlaceholder) {\n        this.togglePlaceholder(this.showPlaceholder);\n      }\n      if (value === undefined || value === '' || value === '<br>') {\n        value = null;\n      }\n      this.refreshView(value);\n    }\n    /**\r\n     * refresh view/HTML of the editor\r\n     *\r\n     * @param value html string from the editor\r\n     */\n    refreshView(value) {\n      const normalizedValue = value === null ? '' : value;\n      this.r.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\n      return;\n    }\n    /**\r\n     * toggles placeholder based on input string\r\n     *\r\n     * @param value A HTML string from the editor\r\n     */\n    togglePlaceholder(value) {\n      if (!value) {\n        this.r.addClass(this.editorWrapper.nativeElement, 'show-placeholder');\n        this.showPlaceholder = true;\n      } else {\n        this.r.removeClass(this.editorWrapper.nativeElement, 'show-placeholder');\n        this.showPlaceholder = false;\n      }\n    }\n    /**\r\n     * Implements disabled state for this element\r\n     *\r\n     * @param isDisabled Disabled flag\r\n     */\n    setDisabledState(isDisabled) {\n      const div = this.textArea.nativeElement;\n      const action = isDisabled ? 'addClass' : 'removeClass';\n      this.r[action](div, 'disabled');\n      this.disabled = isDisabled;\n    }\n    /**\r\n     * toggles editor mode based on bToSource bool\r\n     *\r\n     * @param bToSource A boolean value from the editor\r\n     */\n    toggleEditorMode(bToSource) {\n      let oContent;\n      const editableElement = this.textArea.nativeElement;\n      if (bToSource) {\n        oContent = this.r.createText(editableElement.innerHTML);\n        this.r.setProperty(editableElement, 'innerHTML', '');\n        this.r.setProperty(editableElement, 'contentEditable', false);\n        const oPre = this.r.createElement('pre');\n        this.r.setStyle(oPre, 'margin', '0');\n        this.r.setStyle(oPre, 'outline', 'none');\n        const oCode = this.r.createElement('code');\n        this.r.setProperty(oCode, 'id', 'sourceText' + this.id);\n        this.r.setStyle(oCode, 'display', 'block');\n        this.r.setStyle(oCode, 'white-space', 'pre-wrap');\n        this.r.setStyle(oCode, 'word-break', 'keep-all');\n        this.r.setStyle(oCode, 'outline', 'none');\n        this.r.setStyle(oCode, 'margin', '0');\n        this.r.setStyle(oCode, 'background-color', '#fff5b9');\n        this.r.setProperty(oCode, 'contentEditable', true);\n        this.r.appendChild(oCode, oContent);\n        this.focusInstance = this.r.listen(oCode, 'focus', event => this.onTextAreaFocus(event));\n        this.blurInstance = this.r.listen(oCode, 'blur', event => this.onTextAreaBlur(event));\n        this.r.appendChild(oPre, oCode);\n        this.r.appendChild(editableElement, oPre);\n        // ToDo move to service\n        this.doc.execCommand('defaultParagraphSeparator', false, 'div');\n        this.modeVisual = false;\n        this.viewMode.emit(false);\n        oCode.focus();\n      } else {\n        if (this.doc.querySelectorAll) {\n          this.r.setProperty(editableElement, 'innerHTML', editableElement.innerText);\n        } else {\n          oContent = this.doc.createRange();\n          oContent.selectNodeContents(editableElement.firstChild);\n          this.r.setProperty(editableElement, 'innerHTML', oContent.toString());\n        }\n        this.r.setProperty(editableElement, 'contentEditable', true);\n        this.modeVisual = true;\n        this.viewMode.emit(true);\n        this.onContentChange(editableElement);\n        editableElement.focus();\n      }\n      this.editorToolbar.setEditorMode(!this.modeVisual);\n    }\n    /**\r\n     * toggles editor buttons when cursor moved or positioning\r\n     *\r\n     * Send a node array from the contentEditable of the editor\r\n     */\n    exec() {\n      this.editorToolbar.triggerButtons();\n      let userSelection;\n      if (this.doc.getSelection) {\n        userSelection = this.doc.getSelection();\n        this.editorService.executeInNextQueueIteration(this.editorService.saveSelection);\n      }\n      let a = userSelection.focusNode;\n      const els = [];\n      while (a && a.id !== 'editor') {\n        els.unshift(a);\n        a = a.parentNode;\n      }\n      this.editorToolbar.triggerBlocks(els);\n    }\n    configure() {\n      this.editorService.uploadUrl = this.config.uploadUrl;\n      this.editorService.uploadWithCredentials = this.config.uploadWithCredentials;\n      if (this.config.defaultParagraphSeparator) {\n        this.editorService.setDefaultParagraphSeparator(this.config.defaultParagraphSeparator);\n      }\n      if (this.config.defaultFontName) {\n        this.editorService.setFontName(this.config.defaultFontName);\n      }\n      if (this.config.defaultFontSize) {\n        this.editorService.setFontSize(this.config.defaultFontSize);\n      }\n    }\n    getFonts() {\n      const fonts = this.config.fonts ? this.config.fonts : angularEditorConfig.fonts;\n      return fonts.map(x => {\n        return {\n          label: x.name,\n          value: x.name\n        };\n      });\n    }\n    getCustomTags() {\n      const tags = ['span'];\n      this.config.customClasses.forEach(x => {\n        if (x.tag !== undefined) {\n          if (!tags.includes(x.tag)) {\n            tags.push(x.tag);\n          }\n        }\n      });\n      return tags.join(',');\n    }\n    ngOnDestroy() {\n      if (this.blurInstance) {\n        this.blurInstance();\n      }\n      if (this.focusInstance) {\n        this.focusInstance();\n      }\n    }\n    filterStyles(html) {\n      html = html.replace('position: fixed;', '');\n      return html;\n    }\n  }\n  AngularEditorComponent.ɵfac = function AngularEditorComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularEditorComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(AngularEditorService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵinjectAttribute('autofocus'));\n  };\n  AngularEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AngularEditorComponent,\n    selectors: [[\"angular-editor\"]],\n    contentQueries: function AngularEditorComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c5, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customButtonsTemplateRef = _t.first);\n      }\n    },\n    viewQuery: function AngularEditorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c6, 7);\n        i0.ɵɵviewQuery(_c7, 7);\n        i0.ɵɵviewQuery(_c8, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textArea = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorToolbar = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function AngularEditorComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function AngularEditorComponent_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabindex);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      config: \"config\",\n      placeholder: \"placeholder\",\n      tabIndex: \"tabIndex\"\n    },\n    outputs: {\n      html: \"html\",\n      viewMode: \"viewMode\",\n      blurEvent: \"blur\",\n      focusEvent: \"focus\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AngularEditorComponent),\n      multi: true\n    }, AngularEditorService])],\n    decls: 11,\n    vars: 33,\n    consts: [[\"angularEditor\", \"\"], [\"editorToolbar\", \"\"], [\"editorWrapper\", \"\"], [\"editor\", \"\"], [1, \"angular-editor\", 3, \"ngClass\"], [3, \"execute\", \"id\", \"uploadUrl\", \"upload\", \"showToolbar\", \"fonts\", \"customClasses\", \"defaultFontName\", \"defaultFontSize\", \"hiddenButtons\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"angular-editor-wrapper\"], [1, \"angular-editor-textarea\", 3, \"input\", \"focus\", \"blur\", \"click\", \"keyup\", \"mouseout\", \"paste\"], [1, \"angular-editor-placeholder\"]],\n    template: function AngularEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 4, 0)(2, \"angular-editor-toolbar\", 5, 1);\n        i0.ɵɵlistener(\"execute\", function AngularEditorComponent_Template_angular_editor_toolbar_execute_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.executeCommand($event));\n        });\n        i0.ɵɵelementContainer(4, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 7, 2)(7, \"div\", 8, 3);\n        i0.ɵɵlistener(\"input\", function AngularEditorComponent_Template_div_input_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onContentChange($event.target));\n        })(\"focus\", function AngularEditorComponent_Template_div_focus_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onTextAreaFocus($event));\n        })(\"blur\", function AngularEditorComponent_Template_div_blur_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onTextAreaBlur($event));\n        })(\"click\", function AngularEditorComponent_Template_div_click_7_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.exec());\n        })(\"keyup\", function AngularEditorComponent_Template_div_keyup_7_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.exec());\n        })(\"mouseout\", function AngularEditorComponent_Template_div_mouseout_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onTextAreaMouseOut($event));\n        })(\"paste\", function AngularEditorComponent_Template_div_paste_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onPaste($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 9);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"width\", ctx.config.width)(\"min-width\", ctx.config.minWidth);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c9, ctx.config.toolbarPosition === \"bottom\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx.id)(\"uploadUrl\", ctx.config.uploadUrl)(\"upload\", ctx.config.upload)(\"showToolbar\", ctx.config.showToolbar !== undefined ? ctx.config.showToolbar : true)(\"fonts\", ctx.getFonts())(\"customClasses\", ctx.config.customClasses)(\"defaultFontName\", ctx.config.defaultFontName)(\"defaultFontSize\", ctx.config.defaultFontSize)(\"hiddenButtons\", ctx.config.toolbarHiddenButtons);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customButtonsTemplateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(31, _c10, ctx.executeCommandFn));\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"height\", ctx.config.height)(\"min-height\", ctx.config.minHeight)(\"max-height\", ctx.config.maxHeight)(\"outline\", ctx.config.outline === false ? \"none\" : undefined);\n        i0.ɵɵattribute(\"contenteditable\", ctx.config.editable)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"translate\", ctx.config.translate)(\"spellcheck\", ctx.config.spellcheck);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.placeholder || ctx.config[\"placeholder\"]);\n      }\n    },\n    dependencies: [AeToolbarComponent, i1$1.NgClass, i1$1.NgTemplateOutlet],\n    styles: [\"a[_ngcontent-%COMP%]{cursor:pointer}.angular-editor[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:var(--ae-gap, 5px)}.angular-editor.bottom[_ngcontent-%COMP%]{flex-direction:column-reverse}.angular-editor[_ngcontent-%COMP%]     [contenteditable=true]:empty:before{content:attr(placeholder);color:#868e96;opacity:1}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]{position:relative}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-textarea[_ngcontent-%COMP%]{min-height:150px;overflow:auto;resize:vertical}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-textarea[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;bottom:0;right:0;display:block;width:8px;height:8px;cursor:nwse-resize;background-color:#ffffff80}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-textarea[_ngcontent-%COMP%]{min-height:5rem;padding:.5rem .8rem 1rem;border-radius:var(--ae-text-area-border-radius, .3rem);border:var(--ae-text-area-border, 1px solid #ddd);background-color:transparent;overflow-x:hidden;overflow-y:auto;position:relative}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-textarea[_ngcontent-%COMP%]:focus, .angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-textarea.focus[_ngcontent-%COMP%]{outline:var(--ae-focus-outline-color, -webkit-focus-ring-color auto 1px)}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-textarea[_ngcontent-%COMP%]     blockquote{margin-left:1rem;border-left:.2em solid #dfe2e5;padding-left:.5rem}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]     p{margin-bottom:0}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper[_ngcontent-%COMP%]   .angular-editor-placeholder[_ngcontent-%COMP%]{display:none;position:absolute;top:0;padding:.6rem .8rem 1rem .9rem;color:#6c757d;opacity:.75}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper.show-placeholder[_ngcontent-%COMP%]   .angular-editor-placeholder[_ngcontent-%COMP%]{display:block}.angular-editor[_ngcontent-%COMP%]   .angular-editor-wrapper.disabled[_ngcontent-%COMP%]{cursor:not-allowed;opacity:.5;pointer-events:none}\"]\n  });\n  return AngularEditorComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AngularEditorModule = /*#__PURE__*/(() => {\n  class AngularEditorModule {}\n  AngularEditorModule.ɵfac = function AngularEditorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularEditorModule)();\n  };\n  AngularEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularEditorModule\n  });\n  AngularEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule]]\n  });\n  return AngularEditorModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\r\n * Public API Surface of angular-editor\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AeButtonComponent, AeSelectComponent, AeToolbarComponent, AeToolbarSetComponent, AngularEditorComponent, AngularEditorModule, AngularEditorService };\n//# sourceMappingURL=kolkov-angular-editor.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}