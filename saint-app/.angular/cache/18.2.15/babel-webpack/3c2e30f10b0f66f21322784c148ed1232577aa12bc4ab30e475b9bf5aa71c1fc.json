{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TechnicalSheetService = /*#__PURE__*/(() => {\n  class TechnicalSheetService {\n    constructor(http) {\n      this.http = http;\n      this.urlEndPoint = `${environment.URL_TECHNICAL_DATA_SHEET}/v1/technical/data/sheet`;\n    }\n    getAll(page, status) {\n      return this.http.get(`${this.urlEndPoint}/page/${page}/status/${status}`).pipe(tap(response => response.content.forEach(ficha => console.log(ficha))));\n    }\n    saveFicha(technicalDataSheet) {\n      if (technicalDataSheet.id != null) {\n        return this.http.put(`${this.urlEndPoint}`, technicalDataSheet);\n      }\n      return this.http.post(`${this.urlEndPoint}`, technicalDataSheet);\n    }\n    saveProductImages(id, idCompany, idItem, formData) {\n      return this.http.put(`${this.urlEndPoint}/product/images/${id}/${idCompany}/${idItem}`, formData);\n    }\n    saveCharacteristicImages(id, idCompany, idItem, formData) {\n      return this.http.put(`${this.urlEndPoint}/product/characteristic/images/${id}/${idCompany}/${idItem}`, formData);\n    }\n    saveLogoTechnicalDataSheetFile(id, idCompany, idItem, formData) {\n      return this.http.put(`${this.urlEndPoint}/product/embroidery/files/${id}/${idCompany}/${idItem}`, formData);\n    }\n    getById(id) {\n      return this.http.get(`${this.urlEndPoint}/${id}`);\n    }\n    deleteFicha(ficha) {\n      return this.http.delete(`${this.urlEndPoint}/${ficha.id}`);\n    }\n    searchFicha(word, status) {\n      return this.http.get(`${this.urlEndPoint}/search/${word}/status/${status}`).pipe(tap(response => response.content.forEach(ficha => console.log(ficha))));\n    }\n    listTechnicalSheetBySize(size) {\n      return this.http.get(`${this.urlEndPoint}/size/` + size).pipe(tap(response => response.content.forEach(ficha => console.log(ficha))));\n    }\n    updateStatus(id, status) {\n      return this.http.put(`${this.urlEndPoint}/status/${id}/${status}`, null);\n    }\n    validateExistsTechnicalSheetByIdItem(idItem) {\n      return this.http.get(`${this.urlEndPoint}/exists/${idItem}`);\n    }\n    static #_ = (() => this.ɵfac = function TechnicalSheetService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TechnicalSheetService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TechnicalSheetService,\n      factory: TechnicalSheetService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return TechnicalSheetService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}