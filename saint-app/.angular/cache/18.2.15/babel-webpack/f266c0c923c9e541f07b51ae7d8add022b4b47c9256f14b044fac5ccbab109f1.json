{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let RoleGuard = /*#__PURE__*/(() => {\n  class RoleGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    canActivate(next, state) {\n      if (this.authService.isAuthenticated()) {\n        if (this.isTokenExpired()) {\n          this.authService.logout();\n          this.router.navigate(['/login']);\n          return false;\n        }\n      }\n      if (!this.authService.isAuthenticated()) {\n        this.router.navigate(['/login']);\n        return false;\n      }\n      let role = next.data['role'];\n      if (this.authService.hasRole(role)) {\n        return true;\n      }\n      Swal.fire('Acceso denegado', `Hola ${this.authService.user.firstName} ${this.authService.user.lastName} no tienes permisos suficientes, para acceder al modulo requerido`, 'warning');\n      this.router.navigate(['/dashboard']);\n      return false;\n    }\n    isTokenExpired() {\n      /* Obtiene el token de la sesion getToken */\n      const token = this.authService.token;\n      /* Obtiene los datos del token */\n      const payload = this.authService.getTokenData(token);\n      /* Obtiene la fecha actual en milisegundos y la convierte a segundos diviendo entre 1000 */\n      const actualDate = new Date().getTime() / 1000;\n      /* Valida el tiempo de expiracion de token contra la fecha ctual */\n      return payload.exp < actualDate;\n    }\n    static #_ = (() => this.ɵfac = function RoleGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RoleGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RoleGuard,\n      factory: RoleGuard.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return RoleGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}